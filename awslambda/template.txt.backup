AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda
  Sample SAM Template for lambda

Globals:
  Function:
    Timeout: 50
    MemorySize: 5000
  Api:
    BinaryMediaTypes:
      - image/png
      - image/jpg
      - image/jpeg
Resources:
  CreateBatchFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CreateBatchFunctionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3ReadAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: "arn:aws:s3:::*"  # Allow access to all S3 buckets

  CreateBatchFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        CreateBatch:
          Type: Api
          Properties:
            Path: /create_batch
            Method: post
      Role: !GetAtt CreateBatchFunctionRole.Arn
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./batch_creation
      DockerTag: python3.9-v1
      
Outputs:
  CreateBatchApi:
    Description: "API Gateway endpoint URL for Prod stage for CreateBatch function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_batch/"
  CreateBatchFunction:
    Description: "CreateBatch Lambda Function ARN"
    Value: !GetAtt CreateBatchFunction.Arn
  CreateBatchFunctionIamRole:
    Description: "IAM Role created for CreateBatch function"
    Value: !GetAtt CreateBatchFunctionRole.Arn
