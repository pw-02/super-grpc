syntax = "proto3";

import "google/protobuf/empty.proto";  // Import Empty type
/* 
Command to create stub files:
python -m grpc_tools.protoc --proto_path=. ./superdl/syncgrpc/protos/cache_coordinator.proto --python_out=. --grpc_python_out=.
*/
service CacheCoordinatorService {
  //rpc RegisterJob(JobInfo) returns (RegisterJobResponse);
  //rpc SendMetrics(MetricsRequest) returns (google.protobuf.Empty);
  
  rpc GetBatchStatus(GetBatchStatusRequest) returns (GetBatchStatusResponse);
  rpc RegisterDataset(RegisterDatasetInfo) returns (RegisterDatasetResponse);
  rpc RegisterJob(RegisterJobInfo) returns (RegisterJobResponse);
  rpc ShareBatchAccessPattern(BatchAccessPatternList) returns (google.protobuf.Empty);
  rpc ShareJobMetrics(JobMetricsInfo) returns (google.protobuf.Empty);

}

message GetBatchStatusRequest {
  int64 batch_id = 1;
  string dataset_id =2;
}

message GetBatchStatusResponse {
  bool batch_cached_or_in_progress = 1;
  string message =2;
  }

 message JoEnded {
    int32 job_id = 1;
}

  message JobMetricsInfo {
    int32 job_id = 1;
    string dataset_id =2;
    string metrics = 3;
}

message RegisterJobResponse {
  bool job_registered = 1;
  string message =2;
  }

message RegisterDatasetResponse {
  bool dataset_registered = 1;
  string message =2;
  }
  message RegisterDatasetInfo {
  string dataset_id =1;
  string data_dir =2;
  string source_system =3;
  string labelled_samples = 4;
}

  message RegisterJobInfo {
  int32 job_id = 1;
  repeated string dataset_ids = 2;

}

message BatchAccessPatternList {
    int64 job_id = 1;
    repeated Batch batches = 2;
    string dataset_id =3;
}

message Batch {
  int64 batch_id = 1;
  repeated int32 sample_indices = 2;
}

message Message {
  string message =1;
  }
